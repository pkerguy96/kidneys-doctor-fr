import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Button, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, } from "@mui/material";
import LoadingSpinner from "./LoadingSpinner";
import { useNavigate } from "react-router";
import HealthAndSafetyOutlinedIcon from "@mui/icons-material/HealthAndSafetyOutlined";
import useUserRoles from "../zustand/UseRoles";
const PatientsdetailsComponent = ({ info, isLoading, }) => {
    const { can } = useUserRoles();
    const navigate = useNavigate();
    if (isLoading)
        return _jsx(LoadingSpinner, {});
    console.log(info);
    const handleRowClick = (id) => {
        navigate(`/OrdonanceDetails/${id}`);
    };
    return (_jsxs(Box, { className: "flex flex-col gap-4", children: [_jsxs(Box, { className: "w-full flex gap-4 flex-col lg:flex-row lg:items-start", children: [_jsxs(Box, { className: "flex gap-4 w-full lg:flex-[2] flex-col lg:flex-row", children: [_jsxs(Box, { className: "w-full flex lg:flex-[1] flex-col bg-white shadow-md p-4 rounded-lg gap-4", children: [_jsxs(Box, { className: "w-full flex flex-col", children: [_jsxs("p", { className: "text-2xl font-mono font-bold  text-center uppercase", children: [info.nom, " ", info.prenom] }), _jsx("p", { className: "text-md font-light tracking-wider text-center text-[#b9bec5]", children: info.phoneNumber ? info.phoneNumber : "N/A" })] }), _jsxs(Box, { className: "w-full flex gap-4", children: [_jsxs(Box, { className: "w-full flex flex-col", children: [_jsx("p", { className: "text-xl font-mono font-bold text-center", children: info.pastAppointmentsCount }), _jsx("p", { className: "text-md font-light tracking-wider text-center  text-[#b9bec5]", children: "Passer" })] }), _jsx(Divider, { orientation: "vertical", flexItem: true }), _jsxs(Box, { className: "w-full flex flex-col", children: [_jsx("p", { className: "text-xl font-mono font-bold text-center", children: info.upcomingAppointmentsCount }), _jsx("p", { className: "text-md font-light tracking-wider text-center  text-[#b9bec5]", children: "Prochain" })] })] }), _jsxs(Box, { className: "", children: [_jsx(Box, { className: "w-full flex items-center justify-center", children: _jsx("p", { className: "text-md font-mono font-bold text-center", children: "R\u00E9f\u00E9rence" }) }), _jsx(Box, { className: "w-full flex flex-wrap gap-2", children: info.referral && info.referral.length > 0 ? (info.referral.map((item, index) => (_jsx("span", { className: "px-3 py-1 rounded-full text-gray-700 bg-[#eff1f7] text-sm", children: item }, index)))) : (_jsx("p", { className: "text-gray-500 text-center mx-auto", children: "Aucune r\u00E9f\u00E9rence disponible." })) }), can(["doctor"]) && (_jsx(Box, { className: "flex justify-center items-center mt-4 ", children: _jsx(Tooltip, { title: "Op\u00E9rer", arrow: true, children: _jsx(Button, { className: "text-4xl", onClick: () => navigate(`/Patients/operations/?id=${info?.id}`), children: _jsx(HealthAndSafetyOutlinedIcon, { fontSize: "large" }) }) }) }))] })] }), _jsxs(Box, { className: "w-full flex lg:flex-[1.5] flex-col bg-white shadow-md p-4 rounded-lg gap-4", children: [_jsxs(Box, { className: "flex gap-4", children: [_jsxs(Box, { className: "flex-1 flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "Genre" }), _jsx("p", { className: "text-md text-center", children: info.sex })] }), _jsxs(Box, { className: "flex-1 flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "Naissance" }), _jsx("p", { className: "text-md text-center", children: info.date })] }), _jsxs(Box, { className: "flex-1 flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "T\u00E9l\u00E9phone" }), _jsx("p", { className: "text-md text-center", children: info.phoneNumber })] })] }), _jsx(Divider, { orientation: "horizontal", flexItem: true }), _jsx(Box, { className: "flex gap-4 flex-wrap", children: _jsxs(Box, { className: "w-full flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "Addresse" }), _jsx("p", { className: "text-md text-center", style: { wordWrap: "break-word" }, children: info.address })] }) }), _jsx(Divider, { orientation: "horizontal", flexItem: true }), _jsxs(Box, { className: "flex gap-4", children: [_jsxs(Box, { className: "flex-1 flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "Cin" }), _jsxs("p", { className: "text-md text-center", children: [" ", info.cin] })] }), _jsxs(Box, { className: "flex-1 flex flex-col gap-1", children: [_jsx("p", { className: "text-md font-mono font-bold text-center text-[#b9bec5]", children: "Mutuelle" }), _jsx("p", { className: "text-md text-center", children: info.mutuelle })] })] })] })] }), _jsxs(Box, { className: "w-full lg:flex-1 p-4 rounded-lg bg-white shadow-md flex flex-col gap-4", children: [_jsx(Box, { className: "w-full flex justify-between", children: _jsx("p", { className: "text-md font-mono font-bold", children: "Notes" }) }), _jsx(Box, { className: "w-full bg-[#eff1f7] p-4", children: !info.note ? (_jsx("p", { className: "text-gray-500", children: "Aucune note disponible." })) : (_jsx("ul", { className: "list-disc list-inside", children: info.note.split(",").map((note, index) => (_jsx("li", { className: "text-gray-500", children: note.trim() }, index))) })) })] })] }), _jsxs(Box, { className: "flex flex-col lg:flex-row gap-4", children: [_jsxs(Box, { className: "w-full lg:flex-1 p-4 rounded-lg bg-white shadow-md flex flex-col gap-4", children: [_jsx(Box, { className: "w-full flex  justify-center", children: _jsx("p", { className: "text-md font-mono font-bold", children: "Allergies" }) }), _jsx(Box, { className: "w-full flex flex-wrap gap-2", children: info.allergy && info.allergy.length > 0 ? (info.allergy.map((item, index) => (_jsx("span", { className: "px-3 py-1 rounded-full text-gray-700 bg-[#eff1f7] text-sm", children: item }, index)))) : (_jsx("p", { className: "text-gray-500 text-center mx-auto", children: "Aucune allergie disponible." })) })] }), _jsxs(Box, { className: "w-full lg:flex-1 p-4 rounded-lg bg-white shadow-md flex flex-col gap-4", children: [_jsx(Box, { className: "w-full flex justify-center", children: _jsx("p", { className: "text-md font-mono font-bold ", children: "Maladies" }) }), _jsx(Box, { className: "w-full flex flex-wrap gap-2", children: info.disease && info.disease.length > 0 ? (info.disease.map((item, index) => (_jsx("span", { className: "px-3 py-1 rounded-full text-gray-700 bg-[#eff1f7] text-sm", children: item }, index)))) : (_jsx("p", { className: "text-gray-500 text-center mx-auto", children: "Aucune maladie disponible." })) })] })] }), _jsxs(Box, { className: "flex flex-col bg-white shadow-md rounded-lg p-4 gap-4", children: [_jsx("h2", { className: "text-xl text-black text-center font-mono font-bold", children: "Ordonances" }), _jsx(TableContainer, { component: Paper, elevation: 0, className: "border border-gray-300", children: _jsxs(Table, { sx: { minWidth: 650 }, "aria-label": "simple table", children: [_jsx(TableHead, { className: "bg-gray-200", children: _jsxs(TableRow, { children: [_jsx(TableCell, { align: "center", width: 200, children: "#" }), _jsx(TableCell, { align: "center", children: "Date" })] }) }), _jsx(TableBody, { children: info.ordonances.length > 0 ? (info.ordonances.map((ordonance, index) => (_jsxs(TableRow, { hover: true, onClick: () => handleRowClick(ordonance.id), style: { cursor: "pointer" }, className: "border-t border-gray-300", children: [_jsx(TableCell, { children: index + 1 }), _jsx(TableCell, { children: ordonance.date })] }, index)))) : (_jsx(TableRow, { children: _jsx(TableCell, { colSpan: 2, align: "center", className: "!text-gray-600 p-4", children: _jsx("p", { className: "text-lg", children: "D\u00E9sol\u00E9, aucune ordonnance pour le moment." }) }) })) })] }) })] })] }));
};
export default PatientsdetailsComponent;
